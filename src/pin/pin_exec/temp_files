
/*
VOID ExceptionFound(THREADID threadid, CONTEXT_CHANGE_REASON reason, const CONTEXT *from, CONTEXT *to, INT32 info, VOID *v) {

    printf("ExceptionHandler tid=%d info=0x%x v=%p\n", threadid, info, v);
    /*
      CONTEXT_CHANGE_REASON_FATALSIGNAL  Receipt of fatal Unix signal.
      CONTEXT_CHANGE_REASON_SIGNAL       Receipt of handled Unix signal.
      CONTEXT_CHANGE_REASON_SIGRETURN    Return from Unix signal handler.
      CONTEXT_CHANGE_REASON_APC          Receipt of Windows APC.
      CONTEXT_CHANGE_REASON_EXCEPTION    Receipt of Windows exception.
      CONTEXT_CHANGE_REASON_CALLBACK     Receipt of Windows call-back.
    */

    if(reason == CONTEXT_CHANGE_REASON_FATALSIGNAL)
    {
        ADDRINT eip;
        PIN_GetContextRegval(from, REG_INST_PTR, (UINT8 *) &eip);
        printf("Fatal UNIX signal at %lx\n", eip);
        //CONTEXT ctxt = *from;
        //redirect_to_inst(next_eip, &ctxt);
    }

    else if(reason == CONTEXT_CHANGE_REASON_SIGNAL)
    {
            printf("Handled UNIX signal\n");
    }
    else if(reason == CONTEXT_CHANGE_REASON_SIGRETURN)
    {
            printf("Returned UNIX signal\n");
    }

}

